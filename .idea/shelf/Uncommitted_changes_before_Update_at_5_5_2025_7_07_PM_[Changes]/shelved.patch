Index: app/src/main/java/com/example/project_02_exercise_app/LandingActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.project_02_exercise_app;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.lifecycle.LiveData;\r\n\r\nimport com.example.project_02_exercise_app.database.StrottaDatabase;\r\nimport com.example.project_02_exercise_app.database.StrottaRepository;\r\nimport com.example.project_02_exercise_app.database.entities.Run;\r\nimport com.example.project_02_exercise_app.database.entities.Strotta;\r\nimport com.example.project_02_exercise_app.database.entities.User;\r\nimport com.example.project_02_exercise_app.databinding.ActivityLandingBinding;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\n\r\npublic class LandingActivity extends AppCompatActivity {\r\n\r\n    private static final String USER_ID_KEY = \"com.example.project_02_exercise_app.USER_ID_KEY\";\r\n    static final String SAVED_INSTANCE_STATE_USERID_KEY = \"com.example.project_02_exercise_app.SAVED_INSTANCE_STATE_USERID_KEY\";\r\n    private static final int LOGGED_OUT = -1;\r\n    private ActivityLandingBinding binding;\r\n    private StrottaRepository repository;\r\n    private int userId;\r\n    private User user;\r\n\r\n    public static Intent landingActivityIntentFactory(Context context, int userId) {\r\n        Intent intent = new Intent(context, LandingActivity.class);\r\n        intent.putExtra(USER_ID_KEY, userId);\r\n        return intent;\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityLandingBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        Toolbar tb = findViewById(R.id.toolbar);\r\n        setSupportActionBar(tb);\r\n\r\n        //repository = new StrottaRepository(getApplication());\r\n        repository = StrottaRepository.getRepository(getApplication());\r\n        loginUser(savedInstanceState);\r\n\r\n        userId = getIntent().getIntExtra(USER_ID_KEY, -1);\r\n\r\n        if (userId == -1) {\r\n            Toast.makeText(this, \"Error: No user ID received!\", Toast.LENGTH_SHORT).show();\r\n            finish();\r\n            return;\r\n        }\r\n\r\n        repository.getUserByUserId(userId).observe(this, u -> {\r\n            if (u == null) return;\r\n\r\n            this.user = u;\r\n            invalidateOptionsMenu();\r\n            binding.landingAdminButton.setVisibility(\r\n                    u.isAdmin() ? View.VISIBLE : View.INVISIBLE);\r\n        });\r\n\r\n        binding.landingCardioButton.setOnClickListener(v ->\r\n                startActivity(CardioActivity.cardioIntentFactory(this)));\r\n        binding.landingCalisthenicsButton.setOnClickListener(v ->\r\n                startActivity(CalisthenicsActivity.calisthenicsIntentFactory(this, userId)));\r\n\r\n        binding.landingStrengthButton.setOnClickListener(v -> logExercise(\"Strength\"));\r\n       // binding.landingAdminButton.setVisibility(user.isAdmin() ? View.VISIBLE : View.INVISIBLE);\r\n        binding.landingAdminButton.setOnClickListener(v ->\r\n                startActivity(new Intent(this, AdminActivity.class)));\r\n    }\r\n\r\n    private void loginUser(Bundle savedInstanceState) {\r\n        //check shared preference for logged in user\r\n        SharedPreferences sharedPreferences = getSharedPreferences(getString(R.string.preference_file_key),\r\n                Context.MODE_PRIVATE);\r\n\r\n        userId = sharedPreferences.getInt(getString(R.string.preference_userId_key), LOGGED_OUT);\r\n\r\n        if (userId == LOGGED_OUT & savedInstanceState != null && savedInstanceState.containsKey(SAVED_INSTANCE_STATE_USERID_KEY)) {\r\n            userId = savedInstanceState.getInt(SAVED_INSTANCE_STATE_USERID_KEY, LOGGED_OUT);\r\n        }\r\n        if (userId == LOGGED_OUT) {\r\n            userId = getIntent().getIntExtra(USER_ID_KEY, LOGGED_OUT);\r\n        }\r\n        if (userId == LOGGED_OUT) {\r\n            return;\r\n        }\r\n\r\n        LiveData<User> userObserver = repository.getUserByUserId(userId);\r\n        userObserver.observe(this, user -> {\r\n            this.user = user;\r\n            if (this.user != null) {\r\n                invalidateOptionsMenu();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void logExercise(String type) {\r\n        int minutes = 30;\r\n        double kilometers = 0.5;\r\n        long timeInMs = minutes * 60 * 1000;\r\n        long distanceInMeters = (long)(kilometers * 1000);\r\n\r\n        Run run = new Run(System.currentTimeMillis(), distanceInMeters, timeInMs);\r\n        StrottaDatabase.getDatabase(getApplicationContext()).runDAO().insert(run);\r\n        Toast.makeText(this, type + \" run logged!\", Toast.LENGTH_SHORT).show();\r\n    }\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.logout_menu, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onPrepareOptionsMenu(Menu menu) {\r\n        MenuItem item = menu.findItem(R.id.logoutMenuItem);\r\n        if(user != null){\r\n            item.setTitle(user.getUsername());\r\n        }else {\r\n            item.setTitle(\"Logout\");\r\n        }\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        if (item.getItemId() == R.id.logoutMenuItem) {\r\n            showLogoutDialog();\r\n            return true;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n    private void showLogoutDialog() {\r\n        new AlertDialog.Builder(this)\r\n                .setTitle(\"Logout?\")\r\n                .setMessage(\"Do you want to log out?\")\r\n                .setPositiveButton(\"Yes\", (dialog, which) -> logout())\r\n                .setNegativeButton(\"Cancel\", null)\r\n                .show();\r\n    }\r\n    private void logout() {\r\n        SharedPreferences prefs = getSharedPreferences(getString(R.string.preference_file_key), MODE_PRIVATE);\r\n        prefs.edit().remove(getString(R.string.preference_userId_key)).apply();\r\n\r\n        Intent intent = new Intent(this, LoginActivity.class);\r\n        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        startActivity(intent);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/project_02_exercise_app/LandingActivity.java b/app/src/main/java/com/example/project_02_exercise_app/LandingActivity.java
--- a/app/src/main/java/com/example/project_02_exercise_app/LandingActivity.java	(revision 85b9ca8d06c569c5369de251b16a0269f660c636)
+++ b/app/src/main/java/com/example/project_02_exercise_app/LandingActivity.java	(date 1746497199804)
@@ -51,7 +51,7 @@
         Toolbar tb = findViewById(R.id.toolbar);
         setSupportActionBar(tb);
 
-        //repository = new StrottaRepository(getApplication());
+        repository = new StrottaRepository(getApplication());
         repository = StrottaRepository.getRepository(getApplication());
         loginUser(savedInstanceState);
 
